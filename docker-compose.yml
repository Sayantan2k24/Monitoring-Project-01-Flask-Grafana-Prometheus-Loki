version: "3.8"

networks:
  microservice_monitoring_stack:
    driver: bridge

volumes:
  grafana_data:

################
# Flask APP
################
services:
  flask-metrics-logger:
    container_name: flask-metrics-logger
    build:
      context: ./microservice
      dockerfile: Dockerfile
    # image: sayantan2k21/flask-metrics-logger:v1
    ports:
      - "5000:5000"
    networks:
      - microservice_monitoring_stack
    environment:
      - PORT=5000
    restart: unless-stopped
    depends_on:
      - loki-server
      - prometheus-server
      - blackbox-exporter
    healthcheck:
      test: ["CMD", "curl", "-f", "http://flask-metrics-logger:5000/metrics"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 5s

################
# Prometheus
################
  prometheus-server:
    container_name: prometheus-server
    build:
      context: ./prometheus
      dockerfile: Dockerfile
    # image: sayantan2k21/custom-prometheus-server:v1
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml # config file
      - ./prometheus/alert_rules.yml:/etc/prometheus/alert_rules.yml # alert rules file
    networks:
      - microservice_monitoring_stack
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://prometheus-server:9090/-/healthy"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 5s    
    depends_on:
      alertmanager:
        condition: service_healthy

################
# Grafana
################
  grafana-server:
    container_name: grafana-server
    build:
      context: ./grafana
      dockerfile: Dockerfile
    # image: sayantan2k21/custom-grafana-server:v1
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
    networks:
      - microservice_monitoring_stack
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://grafana-server:3000/api/health"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s
    depends_on:
      - prometheus-server
      - loki-server

################
# Loki
################
  loki-server:
    container_name: loki-server
    build:
      context: ./loki
      dockerfile: Dockerfile
    # image: sayantan2k21/custom-loki-server:v1
    ports:
      - "3100:3100"
    networks:
      - microservice_monitoring_stack
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://loki-server:3100/ready"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 5s

################
# Blackbox Exporter
################     
  blackbox-exporter:
    container_name: blackbox-exporter
    build:
      context: ./blackbox_exporter
      dockerfile: Dockerfile
    # image: sayantan2k21/custom-blackbox-exporter:v1
    ports:
      - "9115:9115"
    volumes:
      - ./blackbox_exporter/blackbox.yml:/etc/blackbox_exporter/blackbox.yml
    networks:
      - microservice_monitoring_stack
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://blackbox-exporter:9115/"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 5s

################
# Alert Manager
################
  alertmanager:
    container_name: alertmanager
    build:
      context: ./alertmanager
      dockerfile: Dockerfile
    ports:
      - "9093:9093"
    volumes:
      - ./alertmanager/alertmanager.yml:/etc/alertmanager/alertmanager.yml
    networks:
      - microservice_monitoring_stack
    healthcheck:
      test: ["CMD", "curl", "-f", "http://alertmanager:9093/-/ready"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s

