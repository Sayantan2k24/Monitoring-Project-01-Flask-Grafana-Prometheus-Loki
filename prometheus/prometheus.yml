global:
  scrape_interval: 4s                # Set the scrape interval to every 4 seconds. Default is every 1 minute.
  evaluation_interval: 4s            # Evaluate rules every 4 seconds. The default is every 1 minute.


scrape_configs:
  # - job_name: "prometheus"            # Job name for Prometheus
  #   # metrics_path defaults to '/metrics'
  #   # scheme defaults to 'http'.
  #   static_configs:
  #     - targets: ["localhost:9090"]   # Target to scrape (Prometheus itself)

  - job_name: 'flask_metrics_logger'
    static_configs:
      - targets: ["flask-metrics-logger:5000"]


# scrape metrics from blackbox_exporter

  - job_name: "blackbox-flask-probe" # Job name for blackbox exporter
    metrics_path: /probe             # Path for blackbox probe
    params:
      module: [http_2xx]             # Module to look for HTTP 200 response

    static_configs:
      - targets:
        - flask-metrics-logger:5000/health # just check the probes by hitting this endpoint and not the / and /slow
        # otherwise it will give unnecessary spike in some metrics value like app_request_latency_seconds_sum was keep on increasing and showed big values like 245.99921298027039 seconds


    relabel_configs:
      - source_labels: [__address__]
        target_label: __param_target
      - source_labels: [__param_target]
        target_label: instance
      - target_label: __address__
        replacement: blackbox-exporter:9115  # container name of blackbox exporter # DNS # or URL can be used


alerting:
  alertmanagers:
    - static_configs:
        - targets: ['alertmanager:9093']    # Alertmanager endpoint

rule_files:
   - "alert_rules.yml"                # Path to alert rules file
  # - "second_rules.yml"              # Additional rule files can be added here